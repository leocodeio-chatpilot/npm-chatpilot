{"version":3,"file":"index.cjs","sources":["../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { SiChatbot } from \"react-icons/si\";\r\nimport { GiCrossedBones } from \"react-icons/gi\";\r\nimport { IoSendSharp } from \"react-icons/io5\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { toast, Toaster } from \"react-hot-toast\";\r\n\r\nexport const Capitalize = ({ str }: { str: string }) => {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n\r\ninterface Message {\r\n  role: string;\r\n  content: string;\r\n}\r\n\r\nexport const ChatPilotBot = ({\r\n  apiKey,\r\n  apiUrl = \"https://api.chatpilot.com\",\r\n}: {\r\n  apiKey: string;\r\n  apiUrl?: string;\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const newMessage = { role: \"user\", content: inputMessage };\r\n    setMessages([...messages, newMessage]);\r\n    setInputMessage(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${apiUrl}/prompt`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({ messages: [...messages, newMessage] }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to get response\");\r\n\r\n      const data = await response.json();\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { role: \"assistant\", content: data.response },\r\n      ]);\r\n    } catch (error) {\r\n      toast.error(\"Failed to get response\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      position: \"fixed\",\r\n      bottom: \"1rem\",\r\n      right: \"1rem\",\r\n    },\r\n    chatContainer: {\r\n      width: \"24rem\",\r\n      backgroundColor: \"white\",\r\n      borderRadius: \"0.5rem\",\r\n      boxShadow: \"0 10px 15px -3px rgba(0, 0, 0, 0.1)\",\r\n      overflow: \"hidden\",\r\n    },\r\n    header: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"1rem\",\r\n      backgroundColor: \"white\",\r\n      borderBottom: \"1px solid #e5e7eb\",\r\n    },\r\n    headerTitle: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    closeButton: {\r\n      padding: \"0.5rem\",\r\n      borderRadius: \"9999px\",\r\n      \":hover\": {\r\n        backgroundColor: \"#f3f4f6\",\r\n      },\r\n    },\r\n    messagesContainer: {\r\n      height: \"24rem\",\r\n      overflowY: \"auto\",\r\n      padding: \"1rem\",\r\n    },\r\n    messageWrapper: (isUser: boolean) => ({\r\n      marginBottom: \"1rem\",\r\n      display: \"flex\",\r\n      justifyContent: isUser ? \"flex-end\" : \"flex-start\",\r\n    }),\r\n    message: (isUser: boolean) => ({\r\n      maxWidth: \"80%\",\r\n      borderRadius: \"0.5rem\",\r\n      padding: \"0.75rem\",\r\n      backgroundColor: isUser ? \"#3b82f6\" : \"#e5e7eb\",\r\n      color: isUser ? \"white\" : \"black\",\r\n    }),\r\n    inputContainer: {\r\n      padding: \"1rem\",\r\n      borderTop: \"1px solid #e5e7eb\",\r\n    },\r\n    inputWrapper: {\r\n      display: \"flex\",\r\n      gap: \"0.5rem\",\r\n    },\r\n    input: {\r\n      flexGrow: 1,\r\n      borderRadius: \"0.5rem\",\r\n      border: \"1px solid #e5e7eb\",\r\n      padding: \"0.5rem\",\r\n      outline: \"none\",\r\n      \":focus\": {\r\n        ring: \"2px\",\r\n        ringColor: \"#3b82f6\",\r\n      },\r\n    },\r\n    sendButton: {\r\n      backgroundColor: \"#3b82f6\",\r\n      color: \"white\",\r\n      padding: \"0.5rem\",\r\n      borderRadius: \"0.5rem\",\r\n      \":hover\": {\r\n        backgroundColor: \"#2563eb\",\r\n      },\r\n      \":disabled\": {\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    chatButton: {\r\n      backgroundColor: \"#3b82f6\",\r\n      color: \"white\",\r\n      padding: \"1rem\",\r\n      borderRadius: \"9999px\",\r\n      \":hover\": {\r\n        backgroundColor: \"#2563eb\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatpilot-container\">\r\n      <Toaster position=\"top-right\" />\r\n      {isOpen ? (\r\n        <div style={styles.chatContainer}>\r\n          <div style={styles.header}>\r\n            <div style={styles.headerTitle}>\r\n              <SiChatbot style={{ width: \"1.5rem\", height: \"1.5rem\" }} />\r\n              <span style={{ fontWeight: 600 }}>ChatPilot</span>\r\n            </div>\r\n            <button onClick={() => setIsOpen(false)} style={styles.closeButton}>\r\n              <GiCrossedBones style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"chatpilot-messages\">\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                style={styles.messageWrapper(message.role === \"user\")}\r\n              >\r\n                <div style={styles.message(message.role === \"user\")}>\r\n                  {message.content}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {isLoading && (\r\n              <div style={styles.messageWrapper(false)}>\r\n                <div style={styles.message(false)}>Typing...</div>\r\n              </div>\r\n            )}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          <form onSubmit={handleSendMessage} style={styles.inputContainer}>\r\n            <div style={styles.inputWrapper}>\r\n              <input\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n                style={styles.input}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                style={styles.sendButton}\r\n              >\r\n                <IoSendSharp style={{ width: \"1.25rem\", height: \"1.25rem\" }} />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <button onClick={() => setIsOpen(true)} style={styles.chatButton}>\r\n          <SiChatbot style={{ width: \"1.5rem\", height: \"1.5rem\" }} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["_ref","str","charAt","toUpperCase","slice","_ref2","apiKey","_ref2$apiUrl","apiUrl","_useState","useState","isOpen","setIsOpen","_useState2","messages","setMessages","_useState3","inputMessage","setInputMessage","_useState4","isLoading","setIsLoading","messagesEndRef","useRef","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","styles","container","position","bottom","right","chatContainer","width","backgroundColor","borderRadius","boxShadow","overflow","header","display","alignItems","justifyContent","padding","borderBottom","headerTitle","gap","closeButton","messagesContainer","height","overflowY","messageWrapper","isUser","marginBottom","message","maxWidth","color","inputContainer","borderTop","inputWrapper","input","flexGrow","border","outline","ring","ringColor","sendButton","opacity","chatButton","React","createElement","className","Toaster","style","SiChatbot","fontWeight","onClick","GiCrossedBones","map","index","key","role","content","ref","onSubmit","e","preventDefault","trim","Promise","resolve","newMessage","concat","fetch","method","headers","Authorization","body","JSON","stringify","then","response","ok","Error","json","data","prev","_catch","toast","error","_finallyRethrows","_wasThrown","_result","reject","type","value","onChange","target","placeholder","disabled","IoSendSharp"],"mappings":"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"}